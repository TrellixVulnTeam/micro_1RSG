{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { faMedal } from '@fortawesome/free-solid-svg-icons';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/challenge.service\";\nimport * as i2 from \"../service/attempt.service\";\nimport * as i3 from \"../service/leaderboard.service\";\nimport * as i4 from \"../service/user.service\";\nimport * as i5 from \"ngx-toastr\";\nimport * as i6 from \"ngx-spinner\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@fortawesome/angular-fontawesome\";\n\nfunction IndexComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelementStart(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r0.challengeResponse.factorA, \" X \", ctx_r0.challengeResponse.factorB, \"\");\n  }\n}\n\nfunction IndexComponent_table_17_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\", 14);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 14);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 14);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 14);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 14);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const attempt_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r3.isCorrect(attempt_r4.correct));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i_r5 + 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r3.isCorrect(attempt_r4.correct));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(attempt_r4.factorA);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r3.isCorrect(attempt_r4.correct));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(attempt_r4.factorB);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r3.isCorrect(attempt_r4.correct));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(attempt_r4.resultAttempt);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r3.isCorrect(attempt_r4.correct));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(attempt_r4.correct ? \"Correct\" : \"Incorrect\");\n  }\n}\n\nfunction IndexComponent_table_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 12);\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5, \"Factor A\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7, \"Factor B\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9, \"Guess\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11, \"Result\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, IndexComponent_table_17_tr_12_Template, 11, 10, \"tr\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.attempts);\n  }\n}\n\nfunction IndexComponent_table_22_tr_10_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"fa-icon\", 15);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const badge_r10 = ctx.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"icon\", ctx_r9.faMedal)(\"ngClass\", ctx_r9.getBadgeColor(badge_r10));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", badge_r10, \" \");\n  }\n}\n\nfunction IndexComponent_table_22_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtemplate(8, IndexComponent_table_22_tr_10_div_8_Template, 3, 3, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const leaderboard_r7 = ctx.$implicit;\n    const i_r8 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r8 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(leaderboard_r7.alias ? leaderboard_r7.alias : leaderboard_r7.userId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(leaderboard_r7.totalScore);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", leaderboard_r7.badges);\n  }\n}\n\nfunction IndexComponent_table_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 12);\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵelementStart(2, \"td\");\n    i0.ɵɵtext(3, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5, \"User\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7, \"ToTal Score\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9, \"Badges\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, IndexComponent_table_22_tr_10_Template, 9, 4, \"tr\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.leaderboards);\n  }\n}\n\nexport let IndexComponent = /*#__PURE__*/(() => {\n  class IndexComponent {\n    constructor(challengeService, attemptService, leaderboardService, userService, toastr, spinner) {\n      this.challengeService = challengeService;\n      this.attemptService = attemptService;\n      this.leaderboardService = leaderboardService;\n      this.userService = userService;\n      this.toastr = toastr;\n      this.spinner = spinner;\n      this.faMedal = faMedal;\n      this.attempts = [];\n      this.leaderboards = [];\n      this.attemptForm = new FormGroup({\n        guess: new FormControl('', [Validators.required, Validators.minLength(2)]),\n        alias: new FormControl('', [Validators.required, Validators.minLength(2)])\n      });\n    }\n\n    ngOnInit() {\n      this.attemptPayload = {\n        factorA: 0,\n        factorB: 0,\n        userAlias: '',\n        guess: 0\n      };\n      this.getRandomChallenge();\n      this.refreshLeaderBoard();\n      setInterval(this.refreshLeaderBoard.bind(this), 5000);\n    }\n\n    refreshLeaderBoard() {\n      this.leaderboardService.getLeaderboards().subscribe(response => {\n        let userIds = response.map(row => row.userId);\n        this.userService.getUsers(userIds).subscribe(users => {\n          let userMap = new Map();\n          users.forEach(user => {\n            userMap.set(user.id, user.userAlias);\n          });\n          response.forEach(row => {\n            row['alias'] = userMap.get(row.userId);\n          });\n          this.updateLeaderBoard(response);\n        });\n      });\n    }\n\n    getRandomChallenge() {\n      this.challengeService.getRandomChallenge().subscribe(response => {\n        this.challengeResponse = response;\n      }, error => {\n        this.toastr.error('Error!');\n      });\n    }\n\n    get alias() {\n      return this.attemptForm.get('alias');\n    }\n\n    get guess() {\n      return this.attemptForm.get('guess');\n    }\n\n    onSubmit() {\n      var _a, _b;\n\n      this.attemptPayload.factorA = this.challengeResponse.factorA;\n      this.attemptPayload.factorB = this.challengeResponse.factorB;\n      this.attemptPayload.userAlias = (_a = this.alias) === null || _a === void 0 ? void 0 : _a.value;\n      this.attemptPayload.guess = (_b = this.guess) === null || _b === void 0 ? void 0 : _b.value;\n      this.attemptService.postAttempt(this.attemptPayload).subscribe(response => {\n        this.getLast10AttemptsByAlias(this.attemptPayload.userAlias);\n        this.getRandomChallenge();\n      }, error => {\n        this.toastr.error('Error!');\n      });\n      this.attemptForm.patchValue({\n        'alias': '',\n        'guess': ''\n      });\n    }\n\n    getLast10AttemptsByAlias(alias) {\n      this.attemptService.getLast10AttemptsByAlias(alias).subscribe(response => {\n        this.attempts = response;\n      }, error => {\n        this.toastr.error('Error!');\n      });\n    }\n\n    isCorrect(correct) {\n      return correct ? \"text-success\" : \"text-danger\";\n    }\n\n    getBadgeColor(badge) {\n      const colorMap = new Map();\n      colorMap.set('Bronze', 'badge-bronze');\n      colorMap.set('Silver', 'badge-silver');\n      colorMap.set('Gold', 'badge-gold');\n      colorMap.set('First time', 'badge-first-time');\n      colorMap.set('Lucky Number', 'badge-lucky-number');\n      return colorMap.get(badge);\n    }\n\n    updateLeaderBoard(leaderboardResponse) {\n      this.leaderboards = leaderboardResponse;\n    }\n\n  }\n\n  IndexComponent.ɵfac = function IndexComponent_Factory(t) {\n    return new (t || IndexComponent)(i0.ɵɵdirectiveInject(i1.ChallengeService), i0.ɵɵdirectiveInject(i2.AttemptService), i0.ɵɵdirectiveInject(i3.LeaderboardService), i0.ɵɵdirectiveInject(i4.UserService), i0.ɵɵdirectiveInject(i5.ToastrService), i0.ɵɵdirectiveInject(i6.NgxSpinnerService));\n  };\n\n  IndexComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IndexComponent,\n    selectors: [[\"app-index\"]],\n    decls: 23,\n    vars: 4,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-6\", \"text-center\"], [1, \"mb-3\"], [3, \"formGroup\", \"ngSubmit\"], [4, \"ngIf\"], [\"type\", \"text\", \"placeholder\", \"Guess....\", \"aria-label\", \"guess\", \"aria-describedby\", \"guess\", \"formControlName\", \"guess\", \"name\", \"guess\", \"id\", \"guess\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"Name....\", \"aria-label\", \"alias\", \"aria-describedby\", \"alias\", \"formControlName\", \"alias\", \"name\", \"alias\", \"id\", \"alias\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"w-100\"], [1, \"col-md-6\"], [\"class\", \"table table-bordered\", 4, \"ngIf\"], [1, \"col-md-12\", \"mt-5\"], [1, \"table\", \"table-bordered\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [\"size\", \"2x\", 3, \"icon\", \"ngClass\"]],\n    template: function IndexComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"h1\", 3);\n        i0.ɵɵtext(4, \"Guess The Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function IndexComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵtemplate(7, IndexComponent_span_7_Template, 3, 2, \"span\", 5);\n        i0.ɵɵelement(8, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 3);\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 3);\n        i0.ɵɵelementStart(12, \"button\", 8);\n        i0.ɵɵtext(13, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 9);\n        i0.ɵɵelementStart(15, \"h1\", 3);\n        i0.ɵɵtext(16, \"Guesses\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, IndexComponent_table_17_Template, 13, 1, \"table\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 1);\n        i0.ɵɵelementStart(19, \"div\", 11);\n        i0.ɵɵelementStart(20, \"h2\", 3);\n        i0.ɵɵtext(21, \"Leader Board\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, IndexComponent_table_22_Template, 11, 1, \"table\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.attemptForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.challengeResponse != null);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.attempts != null);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.attempts != null);\n      }\n    },\n    directives: [i7.ɵNgNoValidate, i7.NgControlStatusGroup, i7.FormGroupDirective, i8.NgIf, i7.DefaultValueAccessor, i7.NgControlStatus, i7.FormControlName, i8.NgForOf, i8.NgClass, i9.FaIconComponent],\n    styles: [\".badge-bronze[_ngcontent-%COMP%]{color:#cd7f32}.badge-silver[_ngcontent-%COMP%]{color:#aaa9ad}.badge-gold[_ngcontent-%COMP%]{color:gold}.badge-lucky-number[_ngcontent-%COMP%]{color:#0c9e5a}.badge-first-time[_ngcontent-%COMP%]{color:#b87333}\"]\n  });\n  return IndexComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
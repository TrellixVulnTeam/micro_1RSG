{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/challenge.service\";\nimport * as i2 from \"../service/attempt.service\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"ngx-spinner\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\n\nfunction IndexComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelementStart(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r0.challengeResponse.factorA, \" X \", ctx_r0.challengeResponse.factorB, \"\");\n  }\n}\n\nexport let IndexComponent = /*#__PURE__*/(() => {\n  class IndexComponent {\n    constructor(challengeService, attemptService, toastr, spinner) {\n      this.challengeService = challengeService;\n      this.attemptService = attemptService;\n      this.toastr = toastr;\n      this.spinner = spinner;\n      this.attemptForm = new FormGroup({\n        guess: new FormControl('', [Validators.required, Validators.minLength(2)]),\n        alias: new FormControl('', [Validators.required, Validators.minLength(2)])\n      });\n    }\n\n    ngOnInit() {\n      this.attemptPayload = {\n        factorA: 0,\n        factorB: 0,\n        userAlias: '',\n        guess: 0\n      };\n      this.getRandomChallenge();\n    }\n\n    getRandomChallenge() {\n      this.challengeService.getRandomChallenge().subscribe(response => {\n        this.challengeResponse = response;\n      }, error => {\n        this.toastr.error('Error!');\n      });\n    }\n\n    get alias() {\n      return this.attemptForm.get('alias');\n    }\n\n    get guess() {\n      return this.attemptForm.get('guess');\n    }\n\n    onSubmit() {\n      var _a, _b;\n\n      this.attemptPayload.factorA = this.challengeResponse.factorA;\n      this.attemptPayload.factorB = this.challengeResponse.factorB;\n      this.attemptPayload.userAlias = (_a = this.alias) === null || _a === void 0 ? void 0 : _a.value;\n      this.attemptPayload.guess = (_b = this.guess) === null || _b === void 0 ? void 0 : _b.value;\n      this.attemptService.postAttempt(this.attemptPayload).subscribe(response => {\n        this.toastr.success(JSON.stringify(response));\n      }, error => {\n        this.toastr.error('Error!');\n      });\n      this.attemptForm.patchValue({\n        'alias': '',\n        'guess': ''\n      });\n    }\n\n  }\n\n  IndexComponent.ɵfac = function IndexComponent_Factory(t) {\n    return new (t || IndexComponent)(i0.ɵɵdirectiveInject(i1.ChallengeService), i0.ɵɵdirectiveInject(i2.AttemptService), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.NgxSpinnerService));\n  };\n\n  IndexComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IndexComponent,\n    selectors: [[\"app-index\"]],\n    decls: 14,\n    vars: 2,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-12\", \"text-center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [4, \"ngIf\"], [\"type\", \"text\", \"placeholder\", \"Guess....\", \"aria-label\", \"guess\", \"aria-describedby\", \"guess\", \"formControlName\", \"guess\", \"name\", \"guess\", \"id\", \"guess\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"Name....\", \"aria-label\", \"alias\", \"aria-describedby\", \"alias\", \"formControlName\", \"alias\", \"name\", \"alias\", \"id\", \"alias\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-secondary\"]],\n    template: function IndexComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"h1\");\n        i0.ɵɵtext(4, \"Guess The Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function IndexComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵtemplate(7, IndexComponent_span_7_Template, 3, 2, \"span\", 5);\n        i0.ɵɵelement(8, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 4);\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 4);\n        i0.ɵɵelementStart(12, \"button\", 8);\n        i0.ɵɵtext(13, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.attemptForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.challengeResponse != null);\n      }\n    },\n    directives: [i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i6.NgIf, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName],\n    styles: [\"\"]\n  });\n  return IndexComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}